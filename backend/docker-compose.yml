services:

  kafka-1:
    image: apache/kafka:4.0.0
    container_name: kafka-1
    ports:
      - "9092:9092"
    environment:
      - KAFKA_NODE_ID=1
      - KAFKA_PROCESS_ROLES=broker,controller
      - KAFKA_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka-1:9092
      - KAFKA_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CONTROLLER_QUORUM_VOTERS=1@kafka-1:9093,2@kafka-2:9093,3@kafka-3:9093
      - KAFKA_CLUSTER_ID=cluster-kraft
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
      - KAFKA_TRANSACTION_STATE_LOG_MIN_ISR=1
      - KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS=0
      - KAFKA_NUM_PARTITIONS=3
    volumes:
      - kafka-1-data:/var/lib/kafka/data
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "kafka-broker-api-versions --bootstrap-server kafka-1:9092 || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - task-service

  kafka-2:
    image: apache/kafka:4.0.0
    container_name: kafka-2
    ports:
      - "9094:9092"
    environment:
      - KAFKA_NODE_ID=2
      - KAFKA_PROCESS_ROLES=broker,controller
      - KAFKA_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka-2:9092
      - KAFKA_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CONTROLLER_QUORUM_VOTERS=1@kafka-1:9093,2@kafka-2:9093,3@kafka-3:9093
      - KAFKA_CLUSTER_ID=cluster-kraft
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
      - KAFKA_TRANSACTION_STATE_LOG_MIN_ISR=1
      - KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS=0
      - KAFKA_NUM_PARTITIONS=3
    volumes:
      - kafka-2-data:/var/lib/kafka/data
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "kafka-broker-api-versions --bootstrap-server kafka-2:9092 || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - task-service

  kafka-3:
    image: apache/kafka:4.0.0
    container_name: kafka-3
    ports:
      - "9095:9092"
    environment:
      - KAFKA_NODE_ID=3
      - KAFKA_PROCESS_ROLES=broker,controller
      - KAFKA_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka-3:9092
      - KAFKA_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CONTROLLER_QUORUM_VOTERS=1@kafka-1:9093,2@kafka-2:9093,3@kafka-3:9093
      - KAFKA_CLUSTER_ID=cluster-kraft
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
      - KAFKA_TRANSACTION_STATE_LOG_MIN_ISR=1
      - KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS=0
      - KAFKA_NUM_PARTITIONS=3
    volumes:
      - kafka-3-data:/var/lib/kafka/data
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "kafka-broker-api-versions --bootstrap-server kafka-2:9092 || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - task-service

  task-service-postgres:
    image: postgres:16-alpine
    container_name: task-service-postgres
    ports:
      - "5437:5432"
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${TASK_SERVICE_POSTGRES_USER}
      POSTGRES_PASSWORD: ${TASK_SERVICE_POSTGRES_PASSWORD}
      POSTGRES_DB: ${TASK_SERVICE_POSTGRES_DB}
    volumes:
      - task-service-postgres-data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $${TASK_SERVICE_POSTGRES_USER}" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - task-service

  task-service-liquibase:
    image: liquibase:4.29
    container_name: task-service-liquibase
    depends_on:
      task-service-postgres:
        condition: service_healthy
    env_file:
      - .env
    environment:
      LIQUIBASE_CLASSPATH: /liquibase/changelog
    volumes:
      - ./task-service/db/changelog:/liquibase/changelog
    command:
      [
        "--url=jdbc:postgresql://task-service-postgres/${TASK_SERVICE_POSTGRES_DB}",
        "--username=${TASK_SERVICE_POSTGRES_USER}",
        "--password=${TASK_SERVICE_POSTGRES_PASSWORD}",
        "--changeLogFile=changelog/db-changelog-master.yml",
        "update"
      ]
    networks:
      - task-service

volumes:
  kafka-1-data:
  kafka-2-data:
  kafka-3-data:
  task-service-postgres-data:

networks:
  task-service:
    driver: bridge
