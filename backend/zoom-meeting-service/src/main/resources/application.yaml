app:
  rabbit:
    zoomMeetQueue: zoomMeetQueue
    meetingLinksQueue: meetingLinksQueue
    zoom-meet-dlq: zoomMeetDlq
    meetingCreateExchange: meetingCreateExchange
    meetingLinksExchange: meetingLinksExchange
    dead-letter-exchange: zoomDeadLetterExchange
    zoomMeetRoutingKey: zoomMeet
    meetingLinkRoutingKey: meetingLink
    zoom-meet-dlq-routing-key: zoomMeetDlqRoutingKey

  zoom:
    file-name: zoom-token.json
    principal-name: ${ZOOM_OAUTH_PRINCIPAL_NAME}
    client-registration-id: ${ZOOM_OAUTH_CLIENT_REGISTRATION_ID}
    base-url: https://api.zoom.us/v2
    meeting-create-url: /users/me/meetings
    timezone: UTC
    date-time-pattern: yyyy-MM-dd HH:mm

encryption:
  aes:
    key: ${SECRET_KEY}

spring:
  application:
    name: ZoomMeetingService

  rabbitmq:
    port: 5672
    host: localhost
    username: ${RABBITMQ_USER}
    password: ${RABBITMQ_PASSWORD}

  security:
    oauth2:
      client:
        registration:
          zoom:
            client-id: ${ZOOM_CLIENT_ID}
            client-secret: ${ZOOM_CLIENT_SECRET}
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:8080/login/oauth2/code/zoom
            client-name: Zoom
        provider:
          zoom:
            authorization-uri: https://zoom.us/oauth/authorize?prompt=consent&access_type=offline
            token-uri: https://zoom.us/oauth/token
            user-info-uri: https://api.zoom.us/v2/users/me
            user-name-attribute: email

server:
  port: 8080

logging:
  level:
    org.springframework.security.oauth2: DEBUG
    org.springframework.web.client: DEBUG
