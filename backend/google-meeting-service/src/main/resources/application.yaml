app:
  rabbit:
    googleMeetQueue: googleMeetQueue
    meetingLinksQueue: meetingLinksQueue
    googleMeetDlq: googleMeetDlq
    meetingCreateExchange: meetingCreateExchange
    meetingLinksExchange: meetingLinksExchange
    deadLetterExchange: googleDeadLetterExchange
    googleMeetRoutingKey: googleMeet
    meetingLinkRoutingKey: meetingLink
    googleMeetDlqRoutingKey: googleMeetDlqRoutingKey

  google:
    oauth:
      file-name: /app/google-token.json
      principalName: ${GOOGLE_OAUTH_PRINCIPAL_NAME}
      clientRegistrationId: ${GOOGLE_OAUTH_CLIENT_REGISTRATION_ID}

encryption:
  aes:
    key: ${SECRET_KEY}

spring:
  application:
    name: GoogleMeetingService

  rabbitmq:
    port: 5672
    host: local-rabbit-mq
    username: ${RABBITMQ_USER}
    password: ${RABBITMQ_PASSWORD}

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope:
              - openid
              - profile
              - email
              - https://www.googleapis.com/auth/meetings.space.created
            redirect-uri: http://localhost:8087/login/oauth2/code/google
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/v2/auth?access_type=offline&prompt=consent
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://openidconnect.googleapis.com/v1/userinfo
            user-name-attribute: sub

server:
  port: 8080
